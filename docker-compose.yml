# version: '3.8'

services:
  # PostgreSQL 16 - メインデータベース
  postgres:
    image: postgres:16-alpine
    container_name: mythologia-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: mythologia_dev
      POSTGRES_USER: mythologia_user
      POSTGRES_PASSWORD: mythologia_pass
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - mythologia-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mythologia_user -d mythologia_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis 7 - キャッシュ・セッション管理
  redis:
    image: redis:7-alpine
    container_name: mythologia-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass mythologia_redis_pass
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - mythologia-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Adminer - データベース管理UI（オプション）
  adminer:
    image: adminer:4-standalone
    container_name: mythologia-adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    networks:
      - mythologia-network
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DESIGN: pepa-linha

  # Backend API - Hono (Docker環境用)
  backend:
    build:
      context: ./webapp/backend
      dockerfile: Dockerfile
    container_name: mythologia-backend
    restart: unless-stopped
    ports:
      - "8787:8787"
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://mythologia_user:mythologia_pass@postgres:5432/mythologia_dev
      REDIS_URL: redis://:mythologia_redis_pass@redis:6379
    networks:
      - mythologia-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./webapp/backend/src:/app/src:ro
      - ./webapp/backend/.env.local:/app/.env.local:ro
    working_dir: /app
    command: npm run dev
    profiles:
      - fullstack

  # RedisInsight - Redis管理UI（オプション）
  redis-insight:
    image: redislabs/redisinsight:latest
    container_name: mythologia-redis-insight
    restart: unless-stopped
    ports:
      - "8001:8001"
    networks:
      - mythologia-network
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - redis_insight_data:/db

# 永続化ボリューム
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  redis_insight_data:
    driver: local

# ネットワーク
networks:
  mythologia-network:
    driver: bridge